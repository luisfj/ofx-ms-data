server:
    port: 8030
    max-http-header-size: 64kb
    # servlet:
    #     context-path: /api/v1/data
application:
    timezone: America/Sao_Paulo
spring:
    security:
        oauth2:
            resourceserver:
                jwt:
                    issuer-uri: http://localhost:9091/realms/luifj-ofx-auth  
    profiles:
        active: ${SPRING_ACTIVE_PROFILE:dev}
    webflux:
        base-path: /api/v1/data
    application:
        name: ofx-ms-data
    rabbitmq:
        host: ${conf.rabbit.host}
        port: ${conf.rabbit.port}
        username: ${conf.rabbit.user}
        password: ${conf.rabbit.pass}
    r2dbc:
        url: r2dbc:postgresql://${conf.db.host}:${conf.db.port}/${conf.db.database}
        username: ${conf.db.user}
        password: ${conf.db.pass}
    datasource:
        jpa:
            url: jdbc:postgresql://${conf.db.host}:${conf.db.port}/${conf.db.database}
            username: ${conf.db.user}
            password: ${conf.db.pass}
            driver-class-name: org.postgresql.Driver
        r2dbc:
            url: r2dbc:postgresql://${conf.db.host}:${conf.db.port}/${conf.db.database}
            username: ${conf.db.user}
            password: ${conf.db.pass}
            driver: postgres
    jpa:
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        hibernate:
            ddl-auto: none
    flyway:
        # enabled: true
        user: ${conf.db.user}
        password: ${conf.db.pass}
        schemas: public
        url: jdbc:postgresql://${conf.db.host}:${conf.db.port}/${conf.db.database}
        # locations: filesystem:resources/db/${POSTGRESQL_USER}
    main:
        web-application-type: reactive
    cloud:
        openfeign:
            client:
                config:
                    default:
                        connectTimeout: 5000
                        readTimeout: 5000
                        loggerLevel: basic
                    permission-checker:
                        url: ${conf.permission-checker.url}
                        connectTimeout: 5000
                        readTimeout: 5000
                        loggerLevel: full
queue:
    name: 
        sse: sse.queue
        imported: imported.queue
        user-change: change.user.queue
        ue-change: change.ue.queue
    routing-key:
        sse: sse
        imported: imported
        user-change: changes.user
        ue-change: changes.ue
exchange:
    name: ofx.app

eureka:
  client:
    service-url:
      defaultZone : http://localhost:8761/eureka/

logging:
    level:
        root: DEBUG
        org.apache.http: DEBUG
        org.springframework.web: DEBUG
        dev.luisjohann.ofxpermissionchecker: DEBUG
        org.springframework.security: DEBUG
        org.springframework.security.oauth2: DEBUG
        org.springframework.security.web.authentication: DEBUG
        org.springframework.security.oauth2.client: DEBUG
        org.springframework.security.oauth2.jwt: DEBUG
        org.springframework.security.oauth2.server.resource: DEBUG
        org.keycloak: DEBUG
        org.keycloak.adapters: DEBUG
        org.keycloak.authentication: DEBUG
        org.keycloak.events: DEBUG